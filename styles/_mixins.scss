@use "sass:math";
@import 'variables';

@mixin bg-gradient($gradiant1, $gradiant2: null) {
  position: relative;

  @if ($gradiant2 == null) {
    &::before {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      border-radius: inherit;
      transition: background, opacity $duration-s ease;
      z-index: 0;
      background: $gradiant1;
    }
  } @else {
    &::before,
    &::after {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      border-radius: inherit;
      transition: background, opacity $duration-s ease;
      z-index: 0;
    }

    &::before {
      background: $gradiant1;
      opacity: 1;
    }

    &::after {
      background: $gradiant2;
      opacity: 0;
    }

    &:hover::after {
      opacity: 1;
    }
  }

  > * {
    z-index: 1;
  }
}

@mixin prepare-bg-gradient($include-hover: false) {
  position: relative;

  @if $include-hover {
    &::before,
    &::after {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      border-radius: inherit;
      opacity: 0;
      transition: background, opacity $duration-s ease;
      z-index: 0;
    }

    &::before {
      background: var(--bg-gradient);
    }

    &::after {
      background: var(--bg-gradient-hover);
    }

    & > * {
      position: relative;
      z-index: 1;
    }
  } @else {
    &::before {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      border-radius: inherit;
      opacity: 0;
      background: var(--bg-gradient);
      transition: background, opacity $duration-s ease;
      z-index: 0;
    }

    & > * {
      position: relative;
      z-index: 1;
    }
  }
}

@mixin display-bg-gradient($include-hover: false) {
  &::before {
    opacity: 1;
  }

  @if ($include-hover) {
    &:hover::after {
      opacity: 1;
    }
  }
}

@mixin text-ellipsis {
  white-space: nowrap;
  text-overflow: ellipsis;
  overflow: hidden;
}

/*
  Commonly used flex combination.
  Default is:
  display: flex;
  align-items: center;
  justify-content: center;
*/
@mixin flexC($inline: false) {
  @if ($inline) {
    display: inline-flex;
  } @else {
    display: flex;
  }

  align-items: center;
  justify-content: center;
}

@mixin flex($al: stretch, $jf: flex-start, $inline: false) {
  @if ($inline) {
    display: inline-flex;
  } @else {
    display: flex;
  }

  align-items: $al;
  justify-content: $jf;
}

@mixin font($s: $base-font-size, $w: $base-font-weight, $lh: $base-line-height, $c: inherit) {
  font-size: $s;
  font-weight: $w;
  line-height: $lh;
  color: $c;
}

@mixin positioning($t: initial, $r: initial, $b: initial, $l: initial) {
  top: $t;
  right: $r;
  bottom: $b;
  left: $l;
}

@mixin scrollbar() {
  // Firefox
  scrollbar-width: thin;

  // Chrome Edge Safari
  &::-webkit-scrollbar {
    width: $scrollbar-width;
    height: $scrollbar-width;
  }

  &::-webkit-scrollbar-track {
    background: var(--scrollbar-bg, $surface-7);
  }

  &::-webkit-scrollbar-thumb {
    background: var(--scrollbar-color, $surface-2);
    border-radius: $scrollbar-width;
    border: 0;
  }
}

@mixin remove-scrollbar() {
  scrollbar-width: none;

  &::-webkit-scrollbar {
    display: none;
  }
}

@mixin hide-scrollbar($width: 5px, $padding-right: 0) {
  padding-right: $padding-right + $width;
  overflow-y: hidden;
  overflow-x: hidden;
}

@mixin show-scrollbar($padding-right: 0) {
  padding-right: $padding-right;
  overflow-y: scroll;
  @include scrollbar();

  // firefox scrollbar does not change width of the container
  @supports (scrollbar-width: thin) {
    padding-right: $padding-right + $scrollbar-width;
  }
}

@mixin descriptor($top: calc(100% + #{$spacing-1}), $left: $spacing-2, $index: 10) {
  position: relative;

  &[data-descriptor]::after {
    content: attr(data-descriptor);
    position: absolute;
    top: $top;
    left: $left;
    z-index: $index;
    cursor: default;
    user-select: none;
    pointer-events: none;
    white-space: nowrap;
    text-overflow: ellipsis;
    @include font(12px, 400, 1.25, $surface-8);
  }
}

// Hide element visually but make it accessible for assistive technologies
@mixin sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border-width: 0;
}

@mixin border-radius-top($radius-left, $radius-right: $radius-left) {
  border-top-left-radius: $radius-left;
  border-top-right-radius: $radius-right;
}

@mixin border-radius-bottom($radius-left, $radius-right: $radius-left) {
  border-bottom-left-radius: $radius-left;
  border-bottom-right-radius: $radius-right;
}

@mixin separator($color: $surface-7, $height: 20px) {
  width: 1px;
  height: $height;
  background-color: $color;
}

// Animation

@mixin circle-rotate($name, $diameter: 0) {
  @keyframes circle-#{$diameter} {
    0% {
      transform: rotate(0deg) translate(-#{math.div($diameter, 2)}px) rotate(0deg);
    }
    100% {
      transform: rotate(360deg) translate(-#{math.div($diameter, 2)}px) rotate(-360deg);
    }
  }
}

@mixin body-bg {
  &::before,
  &::after {
    content: '';
    position: fixed;
    z-index: -1;
  }

  &::before {
    width: 100%;
    height: 100%;
    background: var(--body-bg, $surface-9);
    @include positioning(0, 0);
  }

  &::after {
    width: 84%;
    height: 94%;
    top: -15%;
    left: 41%;
    // new gradient value
    background: $bg-gradient-color;
    opacity: $bg-gradient-opacity;
    filter: blur(175px);
  }
}

@mixin gradient-text($background) {
  background: $background;
  -webkit-background-clip: text;
  background-clip: text;
  -webkit-text-fill-color: transparent;
}
